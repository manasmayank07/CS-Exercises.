import java.util.Arrays;
import java.util.Random;

public class PokerAnalysis {
    static Random rand = new Random();

    // Generate a random hand of 5 cards
    public static int[][] dealHand() {
        int[][] hand = new int[5][2]; // [suit, rank]
        for (int i = 0; i < 5; i++) {
            hand[i][0] = rand.nextInt(4);  // suit: 0â€“3
            hand[i][1] = rand.nextInt(13); // rank: 0â€“12
        }
        return hand;
    }

    public static boolean isFlush(int[][] hand) {
        int suit = hand[0][0];
        for (int i = 1; i < hand.length; i++) {
            if (hand[i][0] != suit) return false;
        }
        return true;
    }

    public static int[] rankCounts(int[][] hand) {
        int[] counts = new int[13];
        for (int i = 0; i < hand.length; i++) {
            counts[hand[i][1]]++;
        }
        return counts;
    }

    public static boolean isPair(int[] ranks) {
        for (int count : ranks) {
            if (count == 2) return true;
        }
        return false;
    }

    // Similarly implement isTwoPair(), isThreeOfAKind(), isFullHouse()

    public static void main(String[] args) {
        int N = 1000000;
        int pairs = 0, flushes = 0;

        for (int i = 0; i < N; i++) {
            int[][] hand = dealHand();
            int[] ranks = rankCounts(hand);
            if (isPair(ranks)) pairs++;
            if (isFlush(hand)) flushes++;
        }

        System.out.println("Pairs: " + 100.0 * pairs / N + "%");
        System.out.println("Flushes: " + 100.0 * flushes / N + "%");
    }
}
